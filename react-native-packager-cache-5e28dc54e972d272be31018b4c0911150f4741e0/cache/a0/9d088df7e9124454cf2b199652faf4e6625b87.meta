["8bc5ae8ce2cdbaac33b4780972dffa04c739ca34","39fa67debe2ba4c5ea70b5dbf45dc0374216f246",["react","react-native","react-navigation","@expo/vector-icons","../img/loginscreen.png","../img/Xbutton.png","../img/FBbutton.png","../img/1loginbutton.png"],[102,199,248,297,1846,2362,2816,4938],{"version":3,"sources":["/home/ducanh/Mare/screens/LoginScreen.js"],"names":["LoginScreen","props","UserLoginFunction","fetch","method","headers","body","JSON","stringify","email","state","UserEmail","password","UserPassword","then","response","json","responseJson","navigation","navigate","Email","alert","catch","error","console","styles","container","require","backgroundImage","containerImage","textHeader","flex","width","height","marginTop","fbButton","orButton","nameInput","paddingLeft","setState","passwordInput","topButton","loginButton","forgotPass","commit","create","flexDirection","justifyContent","alignItems","paddingRight","paddingBottom","OS","paddingHorizontal"],"mappings":"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","sourcesContent":["'use strict';\n\nimport React, { Component } from 'react';\n\nimport {\n   StyleSheet,\n  View,\n  Image,\n  Text,\n  TextInput,\n  Alert,\n  TouchableOpacity,\n  Platform\n} from 'react-native';\nimport { StackNavigator } from 'react-navigation';\nimport { Ionicons } from '@expo/vector-icons';\nclass LoginScreen extends Component {\n  constructor(props) {\n \n    super(props)\n \n    this.state = {\n \n      UserEmail: '',\n      UserPassword: ''\n \n    }\n \n  }\n \n\nUserLoginFunction = () =>{\n \n\n \n \nfetch('http://192.168.100.29/Mare/User_Login.php', {\n  method: 'POST',\n  headers: {\n    'Accept': 'application/json',\n    'Content-Type': 'application/json',\n  },\n  body: JSON.stringify({\n \n    email: this.state.UserEmail,\n \n    password: this.state.UserPassword\n \n  })\n \n}).then((response) => response.json())\n      .then((responseJson) => {\n \n        // If server response message same as Data Matched\n       if(responseJson === 'Data Matched')\n        {\n \n            //Then open Profile activity and send user email to profile activity.\n            this.props.navigation.navigate('LoginSuccess', { Email: this.state.UserEmail });\n \n        }\n        else{\n \n          Alert.alert(responseJson);\n        }\n \n      }).catch((error) => {\n        console.error(error);\n      });\n \n  }\n  render() {\n    return (\n      <View style={styles.container}>\n            <Image  source={require('../img/loginscreen.png')} style={styles.backgroundImage}>\n                  <View style={styles.containerImage}>\n                        <View style={styles.textHeader}>\n                                \n                            <TouchableOpacity  style={{flex: 0.2,}}>\n                                  <Image  source={require('../img/Xbutton.png')} style={{flex: 0.5,width:null,height:null,marginTop:10}}>\n                             \n                                  </Image>\n                            </TouchableOpacity>\n\n\n                        </View>\n                              <View style={styles.fbButton}>\n                                    <TouchableOpacity  style={{flex: 1,}}>\n                                          <Image  source={require('../img/FBbutton.png')} style={{flex: 1,width:null,height:null}}>\n                                          </Image>\n                                    </TouchableOpacity>\n\n\n                              </View>\n\n                                    <View style={styles.orButton}>\n                        \n\n\n                                     </View>\n\n                                          <View style={styles.nameInput}>\n                                                <TextInput\n                                                                   style={{flex: 1,paddingLeft: 40}}\n                                                                   underlineColorAndroid='transparent'\n                                                                   placeholder=\"E-mail\"\n                                                                   placeholderTextColor = \"#47E5B3\"\n                                                                   onChangeText={UserEmail => this.setState({UserEmail})}\n                                                                   keybroadType=\"email-address\"\n                                                />\n\n\n                                           </View>\n\n                                                <View style={styles.passwordInput}>\n                                                      <TextInput\n                                                            style={{flex: 1,paddingLeft: 40}}\n                                                            placeholderTextColor = \"#47E5B3\"\n                                                            underlineColorAndroid='transparent'\n                                                            placeholder=\"Password\"\n                                                            onChangeText={UserPassword => this.setState({UserPassword})}\n                                                            secureTextEntry\n                                        \n                                                       />   \n                                                   <TouchableOpacity  >\n                                             <Ionicons name=\"ios-eye\" size={20} />\n                                             </TouchableOpacity>\n\n                                                 </View>\n\n                                                      <View style={styles.topButton}>\n\n                                                       </View> \n                                                    <View style={styles.loginButton}>\n                                                              <TouchableOpacity  style={{flex: 1,}} onPress={this.UserLoginFunction}>\n                                                          <Image  source={require('../img/1loginbutton.png')} style={{flex: 1,width:null,height:null}}>\n                                                          </Image>\n                                                    </TouchableOpacity>\n\n\n                                                     </View>\n\n                                                        <View style={styles.forgotPass}>\n                        \n\n\n                                                         </View>\n\n                                                                <View style={styles.commit}>\n                        \n\n\n                                                                 </View>\n                  </View>\n            </Image>\n\n      </View>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\ncontainer:{\n  flex: 1,\n},\nbackgroundImage:{\n  flex: 1,\n  width:null,\n  height:null\n},\ncontainerImage:{\nflex: 1,\n\n},\ntextHeader:{\n  flex: 0.8,\n  flexDirection:'row',\n\njustifyContent: 'flex-end',\nalignItems: 'center',\npaddingRight:13\n},\nfbButton:{\nflex: 0.45,\n \n paddingBottom: (Platform.OS === 'ios') ? 0 : 10 ,\npaddingLeft:26,\npaddingRight:23\n},\norButton:{\nflex: 0.9,\n\n},\nnameInput:{\nflex: 0.6,\npaddingLeft:26,\n\n},\npasswordInput:{\n  flex: 0.6,\n  paddingLeft:26,\n  paddingRight:60,\njustifyContent: 'center',\n  alignItems: 'center',\n  flexDirection:'row',\n\n},\nloginButton:{\n  flex: 0.5,\n  paddingHorizontal:23,\n \n   marginTop: (Platform.OS === 'ios') ? 1 : 20 ,\n},\nforgotPass:{\n  flex: 0.4,\n\n\n},\n\ncommit:{\nflex: 1.5,\n\n},\ntopButton:{\n    flex: 0.2,\n   \n}\n});\n\n\nexport default LoginScreen;"]}]