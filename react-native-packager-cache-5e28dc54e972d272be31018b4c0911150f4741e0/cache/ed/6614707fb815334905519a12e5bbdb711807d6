'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/ducanh/Mare/screens/RegisterScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _expo = require('expo');

var _vectorIcons = require('@expo/vector-icons');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var regeneratorRuntime = require('regenerator-runtime');

var _components = {
  RegisterScreen: {
    displayName: 'RegisterScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/ducanh/Mare/screens/RegisterScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var RegisterScreen = _wrapComponent('RegisterScreen')(function (_Component) {
  _inherits(RegisterScreen, _Component);

  function RegisterScreen() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, RegisterScreen);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RegisterScreen.__proto__ || Object.getPrototypeOf(RegisterScreen)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
      fontLoaded: false
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(RegisterScreen, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      return regeneratorRuntime.async(function componentDidMount$(_context) {
        while (1) {
          switch (_context.prev = _context.next) {
            case 0:
              _context.next = 2;
              return regeneratorRuntime.awrap(_expo.Font.loadAsync({
                'pomeranian': require('../assets/fonts/pomeranian.ttf')
              }));

            case 2:

              this.setState({ fontLoaded: true });

            case 3:
            case 'end':
              return _context.stop();
          }
        }
      }, null, this);
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 29
          }
        },
        _react3.default.createElement(
          _reactNative.Image,
          { source: require('../img/signin1.png'), style: styles.backgroundImage, __source: {
              fileName: _jsxFileName,
              lineNumber: 30
            }
          },
          _react3.default.createElement(
            _reactNative.View,
            { style: styles.containerImage, __source: {
                fileName: _jsxFileName,
                lineNumber: 31
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.textHeader, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 32
                }
              },
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { style: { flex: 0.2 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 34
                  }
                },
                _react3.default.createElement(_reactNative.Image, { source: require('../img/Xbutton.png'), style: { flex: 0.5, width: null, height: null, marginTop: 10 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 35
                  }
                })
              )
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.fbButton, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 43
                }
              },
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { style: { flex: 1 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 44
                  }
                },
                _react3.default.createElement(_reactNative.Image, { source: require('../img/FBbutton.png'), style: { flex: 1, width: null, height: null }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 45
                  }
                })
              )
            ),
            _react3.default.createElement(_reactNative.View, { style: styles.orButton, __source: {
                fileName: _jsxFileName,
                lineNumber: 50
              }
            }),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.nameInput, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 54
                }
              },
              _react3.default.createElement(_reactNative.TextInput, {
                style: { flex: 1, paddingLeft: 40 },
                underlineColorAndroid: 'transparent',
                placeholder: 'Name',
                placeholderTextColor: '#47E5B3',
                onChangeText: function onChangeText(UserName) {
                  return _this2.setState({ UserName: UserName });
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 55
                }
              })
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.emailInput, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 65
                }
              },
              _react3.default.createElement(_reactNative.TextInput, {
                style: { flex: 1, paddingLeft: 40 },
                underlineColorAndroid: 'transparent',
                keyboardType: 'email-address',
                placeholder: 'E-mail',
                placeholderTextColor: '#47E5B3',
                onChangeText: function onChangeText(UserEmail) {
                  return _this2.setState({ UserEmail: UserEmail });
                },
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 66
                }
              })
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.passwordInput, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 76
                }
              },
              _react3.default.createElement(_reactNative.TextInput, {
                style: { flex: 1, paddingLeft: 5 },
                underlineColorAndroid: 'transparent',
                placeholder: 'Password',
                placeholderTextColor: '#47E5B3',
                onChangeText: function onChangeText(UserPassword) {
                  return _this2.setState({ UserPassword: UserPassword });
                },
                secureTextEntry: true,
                __source: {
                  fileName: _jsxFileName,
                  lineNumber: 77
                }
              }),
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                {
                  __source: {
                    fileName: _jsxFileName,
                    lineNumber: 85
                  }
                },
                _react3.default.createElement(_vectorIcons.Ionicons, { name: 'ios-eye', size: 20, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 86
                  }
                })
              )
            ),
            _react3.default.createElement(_reactNative.View, { style: styles.checkBox, __source: {
                fileName: _jsxFileName,
                lineNumber: 92
              }
            }),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.registerButton, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 96
                }
              },
              _react3.default.createElement(
                _reactNative.TouchableOpacity,
                { style: { flex: 1 }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 97
                  }
                },
                _react3.default.createElement(_reactNative.Image, { source: require('../img/signinbutton.png'), style: { flex: 1, width: null, height: null }, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 98
                  }
                })
              )
            ),
            _react3.default.createElement(_reactNative.View, { style: styles.loginButton, __source: {
                fileName: _jsxFileName,
                lineNumber: 103
              }
            })
          )
        )
      );
    }
  }]);

  return RegisterScreen;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: 'white'
  },
  backgroundImage: {
    flex: 1,
    height: null,
    width: null

  },
  containerImage: {
    flex: 1

  },
  textHeader: {
    flex: 1.1,
    flexDirection: 'row',
    paddingHorizontal: 23,
    justifyContent: 'flex-end',
    alignItems: 'center'

  },
  fbButton: {
    flex: 0.85,
    marginLeft: 3,
    paddingTop: 2,
    paddingHorizontal: 23
  },
  orButton: {
    flex: 1.3

  },
  nameInput: {
    flex: 0.9,
    paddingHorizontal: 23
  },
  emailInput: {
    flex: 0.9,
    paddingHorizontal: 23
  },
  passwordInput: {
    flex: 0.9,
    flexDirection: 'row',
    paddingHorizontal: 58,

    justifyContent: 'center',
    alignItems: 'center'
  },
  checkBox: {
    flex: 1.2

  },
  registerButton: {
    flex: 0.7,
    paddingHorizontal: 18,
    marginLeft: 5
  },
  loginButton: {
    flex: 1.2,

    justifyContent: 'center',
    backgroundColor: 'rgba(0,0,0,0)',
    paddingLeft: 20
  }
});

exports.default = RegisterScreen;