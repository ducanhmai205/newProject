["45ee1b7cade4fd2288ad325bc48cc64a6afe369b","ae2eb1604c4baba4551a319d2ef29294a01f0e07",["react","prop-types","react-native"],[118,213,323],{"version":3,"sources":["/home/ducanh/Mare/node_modules/react-native-flexi-radio-button/lib/radioButton.js"],"names":["RadioButton","props","context","nextProps","setState","selectedIndex","height","size","width","borderRadius","borderWidth","thickness","borderColor","isSelected","activeColor","color","backgroundColor","getRadioDotStyle","children","opacity","disabled","onSelect","index","value","styles","container","style","highlightColor","radio","getRadioStyle","item","contextTypes","func","isRequired","number","string","create","flexGrow","flexDirection","padding","alignItems","justifyContent","marginLeft"],"mappings":";;;;;AAAA;;;;AACA;;;;AACA;;IAOqBA,W;;;AACjB,yBAAYC,KAAZ,EAAmBC,OAAnB,EAA2B;AAAA;AAAA,qIACjBD,KADiB,EACVC,OADU;AAE1B;;;;kDAEyBC,S,EAAU;AACtC,iBAAKC,QAAL,CAAc;AACbC,+BAAeF,UAAUE;AADZ,aAAd;AAGA;;;wCAEiB;AACX,mBAAO;AACHC,wBAAQ,KAAKJ,OAAL,CAAaK,IADlB;AAENC,uBAAO,KAAKN,OAAL,CAAaK,IAFd;AAGNE,8BAAc,KAAKP,OAAL,CAAaK,IAAb,GAAoB,CAH5B;AAING,6BAAa,KAAKR,OAAL,CAAaS,SAJpB;AAKNC,6BAAa,KAAKX,KAAL,CAAWY,UAAX,IAAyB,KAAKZ,KAAL,CAAWa,WAApC,GAAgD,KAAKb,KAAL,CAAWa,WAA3D,GAAuE,KAAKZ,OAAL,CAAaa;AAL3F,aAAP;AAOH;;;2CAEiB;AACd,mBAAO;AACHT,wBAAQ,KAAKJ,OAAL,CAAaK,IAAb,GAAoB,CADzB;AAEHC,uBAAO,KAAKN,OAAL,CAAaK,IAAb,GAAoB,CAFxB;AAGHE,8BAAc,KAAKP,OAAL,CAAaK,IAAb,GAAoB,CAH/B;AAIHS,iCAAiB,KAAKf,KAAL,CAAWc,KAAX,IAAoB,KAAKd,KAAL,CAAWa;AAJ7C,aAAP;AAMH;;;qCAEW;AACR,gBAAG,KAAKb,KAAL,CAAWY,UAAd,EACI,OAAO,mDAAM,OAAO,KAAKI,gBAAL,EAAb,GAAP;AACP;;;iCACO;AAAA;;AAAA,gBACCC,QADD,GACa,KAAKjB,KADlB,CACCiB,QADD;;AAEJ,mBACI;AAAA;AAAA,kBAAM,OAAO,EAACC,SAAS,KAAKlB,KAAL,CAAWmB,QAAX,GAAoB,GAApB,GAAwB,CAAlC,EAAb;AACI;AAAA;AAAA;AACI,kCAAU,KAAKnB,KAAL,CAAWmB,QADzB;AAEI,iCAAS;AAAA,mCAAM,OAAKlB,OAAL,CAAamB,QAAb,CAAsB,OAAKpB,KAAL,CAAWqB,KAAjC,EAAwC,OAAKrB,KAAL,CAAWsB,KAAnD,CAAN;AAAA;AAFb;AAII;AAAA;AAAA,0BAAM,OAAO,CAACC,OAAOC,SAAR,EAAmB,KAAKxB,KAAL,CAAWyB,KAA9B,EAAqC,KAAKzB,KAAL,CAAWY,UAAX,GAAsB,EAACG,iBAAiB,KAAKd,OAAL,CAAayB,cAA/B,EAAtB,GAAqE,IAA1G,CAAb;AACI;AAAA;AAAA,8BAAM,OAAO,CAACH,OAAOI,KAAR,EAAe,KAAKC,aAAL,EAAf,CAAb;AACK,iCAAKhB,UAAL;AADL,yBADJ;AAII;AAAA;AAAA,8BAAM,OAAOW,OAAOM,IAApB;AACKZ;AADL;AAJJ;AAJJ;AADJ,aADJ;AAiBH;;;;;kBArDgBlB,W;;;AAwDrBA,YAAY+B,YAAZ,GAA2B;AACnBV,cAAU,oBAAUW,IAAV,CAAeC,UADN;AAEnB1B,UAAM,oBAAU2B,MAAV,CAAiBD,UAFJ;AAGnBtB,eAAW,oBAAUuB,MAAV,CAAiBD,UAHT;AAInBlB,WAAO,oBAAUoB,MAAV,CAAiBF,UAJL;AAKnBN,oBAAgB,oBAAUQ;AALP,CAA3B;;AAQA,IAAIX,SAAS,wBAAWY,MAAX,CAAkB;AAC7BX,eAAU;AACTY,kBAAU,CADD;AAETC,uBAAe,KAFN;AAGTC,iBAAS;AAHA,KADmB;AAM7BX,WAAM;AACLY,oBAAY,QADP;AAELC,wBAAgB;AAFX,KANuB;AAU7BX,UAAM;AACJY,oBAAY,CADR;AAEJF,oBAAY,QAFR;AAGPC,wBAAgB;AAHT;AAVuB,CAAlB,CAAb","sourcesContent":["import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport {\n  StyleSheet,\n  View,\n  Text,\n  TouchableWithoutFeedback\n} from 'react-native';\n\nexport default class RadioButton extends Component{\n    constructor(props, context){\n        super(props, context)\n    }\n\n    componentWillReceiveProps(nextProps){\n\t\tthis.setState({\n\t\t\tselectedIndex: nextProps.selectedIndex\n\t\t})\n\t}\n\n    getRadioStyle(){\n        return {\n            height: this.context.size,\n\t        width: this.context.size,\n\t        borderRadius: this.context.size / 2,\n\t        borderWidth: this.context.thickness,\n\t        borderColor: this.props.isSelected && this.props.activeColor?this.props.activeColor:this.context.color,\n        }\n    }\n\n    getRadioDotStyle(){\n        return {\n            height: this.context.size / 2,\n            width: this.context.size / 2,\n            borderRadius: this.context.size / 4,\n            backgroundColor: this.props.color || this.props.activeColor,\n        }\n    }\n\n    isSelected(){\n        if(this.props.isSelected)\n            return <View style={this.getRadioDotStyle()}/>\n    }\n    render(){\n        var {children} = this.props\n        return(\n            <View style={{opacity: this.props.disabled?0.4:1}}>\n                <TouchableWithoutFeedback\n                    disabled={this.props.disabled}\n                    onPress={() => this.context.onSelect(this.props.index, this.props.value)}\n                >\n                    <View style={[styles.container, this.props.style, this.props.isSelected?{backgroundColor: this.context.highlightColor}:null]}>\n                        <View style={[styles.radio, this.getRadioStyle()]}>\n                            {this.isSelected()}\n                        </View>\n                        <View style={styles.item}>\n                            {children}\n                        </View>\n                    </View>\n            </TouchableWithoutFeedback>\n          </View>\n        )\n    }\n}\n\nRadioButton.contextTypes = {\n        onSelect: PropTypes.func.isRequired,\n        size: PropTypes.number.isRequired,\n        thickness: PropTypes.number.isRequired,\n        color: PropTypes.string.isRequired,\n        highlightColor: PropTypes.string\n    }\n\nlet styles = StyleSheet.create({\n  container:{\n\t  flexGrow: 1,\n\t  flexDirection: 'row',\n\t  padding: 10,\n  },\n  radio:{\n\t  alignItems: 'center',\n\t  justifyContent: 'center',\n  },\n  item: {\n    marginLeft: 5,\n    alignItems: 'center',\n\tjustifyContent: 'center',\n  }\n})\n"]}]