'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _react2 = require('react');

var _react3 = _interopRequireDefault(_react2);

var _index = require('./../node_modules/react-transform-hmr/lib/index.js');

var _index2 = _interopRequireDefault(_index);

var _jsxFileName = '/home/ducanh/Mare/screens/TopScreen.js';

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactNative = require('react-native');

var _expo = require('expo');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var _components = {
  TopScreen: {
    displayName: 'TopScreen'
  }
};

var _node_modulesReactTransformHmrLibIndexJs2 = (0, _index2.default)({
  filename: '/home/ducanh/Mare/screens/TopScreen.js',
  components: _components,
  locals: [module],
  imports: [_react3.default]
});

function _wrapComponent(id) {
  return function (Component) {
    return _node_modulesReactTransformHmrLibIndexJs2(Component, id);
  };
}

var TopScreen = _wrapComponent('TopScreen')(function (_Component) {
  _inherits(TopScreen, _Component);

  function TopScreen() {
    _classCallCheck(this, TopScreen);

    return _possibleConstructorReturn(this, (TopScreen.__proto__ || Object.getPrototypeOf(TopScreen)).apply(this, arguments));
  }

  _createClass(TopScreen, [{
    key: 'render',
    value: function render() {
      var navigate = this.props.navigation.navigate;

      var Backgrounds = {
        Login: require('../img/topscreen.png')
      };
      return _react3.default.createElement(
        _reactNative.View,
        { style: styles.container, __source: {
            fileName: _jsxFileName,
            lineNumber: 21
          }
        },
        _react3.default.createElement(
          _reactNative.Image,
          { source: Backgrounds.Login, style: styles.backgroundImage, __source: {
              fileName: _jsxFileName,
              lineNumber: 22
            }
          },
          _react3.default.createElement(_reactNative.View, { style: styles.one, __source: {
              fileName: _jsxFileName,
              lineNumber: 23
            }
          }),
          _react3.default.createElement(
            _reactNative.View,
            { style: styles.two, __source: {
                fileName: _jsxFileName,
                lineNumber: 27
              }
            },
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.two2, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 28
                }
              },
              _react3.default.createElement(_reactNative.View, { style: styles.two4, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 29
                }
              }),
              _react3.default.createElement(
                _reactNative.View,
                { style: styles.two5, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 32
                  }
                },
                _react3.default.createElement(
                  _reactNative.TouchableOpacity,
                  { onPress: function onPress() {
                      navigate('LoginScreen');
                    }, style: { flex: 1 }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 33
                    }
                  },
                  _react3.default.createElement(_reactNative.Image, { source: require('../img/loginbutton.png'), style: { flex: 1,
                      width: null,
                      height: null
                    },
                    resizeMode: 'contain', __source: {
                      fileName: _jsxFileName,
                      lineNumber: 34
                    }
                  })
                )
              ),
              _react3.default.createElement(_reactNative.View, { style: styles.two6, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 44
                }
              })
            ),
            _react3.default.createElement(
              _reactNative.View,
              { style: styles.two3, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 48
                }
              },
              _react3.default.createElement(_reactNative.View, { style: styles.two7, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 49
                }
              }),
              _react3.default.createElement(
                _reactNative.View,
                { style: styles.two8, __source: {
                    fileName: _jsxFileName,
                    lineNumber: 53
                  }
                },
                _react3.default.createElement(
                  _reactNative.TouchableOpacity,
                  {
                    onPress: function onPress() {
                      navigate('RegisterScreen');
                    }, style: { flex: 1 }, __source: {
                      fileName: _jsxFileName,
                      lineNumber: 54
                    }
                  },
                  _react3.default.createElement(_reactNative.Image, { source: require('../img/buttontop.png'), style: { flex: 1,
                      width: null,
                      height: null
                    },
                    __source: {
                      fileName: _jsxFileName,
                      lineNumber: 56
                    }
                  })
                )
              ),
              _react3.default.createElement(_reactNative.View, { style: styles.two9, __source: {
                  fileName: _jsxFileName,
                  lineNumber: 65
                }
              })
            )
          ),
          _react3.default.createElement(_reactNative.View, { style: styles.three, __source: {
              fileName: _jsxFileName,
              lineNumber: 70
            }
          })
        )
      );
    }
  }]);

  return TopScreen;
}(_react2.Component));

var styles = _reactNative.StyleSheet.create({
  container: {
    flex: 1
  },
  backgroundImage: {
    flex: 1,

    width: null,
    height: null
  },
  one: {
    flex: 4

  },
  two: {
    flex: 1.2
  },
  two2: {
    flex: 1,

    flexDirection: 'row'

  },
  two4: {
    flex: 1
  },
  two5: {
    flex: 2.3,
    marginBottom: _reactNative.Platform.OS === 'ios' ? 18 : 0,
    paddingRight: 12,
    marginHorizontal: 3
  },
  two6: {
    flex: 0.9
  },
  two7: {
    flex: 1
  },
  two8: {
    flex: 2.3,
    marginBottom: _reactNative.Platform.OS === 'ios' ? 20 : 5,
    marginTop: _reactNative.Platform.OS === 'ios' ? 0 : 11,
    marginRight: 5

  },
  two9: {
    flex: 0.9

  },
  two3: {
    flex: 1,
    flexDirection: 'row'

  },
  three: {
    flex: 0.8

  }

});

exports.default = TopScreen;